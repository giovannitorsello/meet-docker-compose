#!/usr/bin/with-contenv bash

# make our folders
mkdir -p \
    /config/{nginx/site-confs,keys} \
    /run \
    /var/lib/nginx/tmp/client_body \
    /var/tmp/nginx

# Populate config files with .env data
cp /defaults/nginx.conf /etc/nginx/nginx.conf
cp /defaults/ssl.conf /etc/nginx/ssl.conf
cp /defaults/default /etc/nginx/sites-enabled/default
cp /defaults/meet.conf /etc/nginx/meet.conf
#sed -i 's/${DOMAIN}/'"${DOMAIN}"'/g' /etc/nginx/meet.conf

ip=`hostname -I`
export WEBPACK_DEV_SERVER_PROXY_TARGET="https://$ip"
cd /var/www/html/meet/
cp /config/web/config.js  /var/www/html/meet/config.js
cp /config/web/interface_config.js  /var/www/html/meet/interface_config.js

make

# generate keys (maybe)
if [[ $ENABLE_LETSENCRYPT -eq 1 ]]; then
    if [[ ! -f /etc/letsencrypt/live/$DOMAIN/fullchain.pem ]]; then
        if ! certbot \
                certonly \
                --no-self-upgrade \
                --noninteractive \
                --standalone \
                --preferred-challenges http \
                -d $DOMAIN \
                --agree-tos \
                --email $LETSENCRYPT_EMAIL ; then

            echo "Failed to obtain a certificate from the Let's Encrypt CA."
            # this tries to get the user's attention and to spare the
            # authority's rate limit:
            sleep 15
            echo "Exiting."
            exit 1
        fi
    fi

    # remove default certbot renewal
    if [[ -f /etc/cron.d/certbot ]]; then
        rm /etc/cron.d/certbot
    fi

    # setup certbot renewal script
    if [[ ! -f /etc/cron.daily/letencrypt-renew ]]; then
        cp /defaults/letsencrypt-renew /etc/cron.daily/
    fi
else
        FILE="/config/keys/fullchain.pem"
        if [ -f "$FILE" ]; then
            echo "Certificate exists"
        else 
            echo "Certificate does not exist."
            echo "Generating self-signed keys in /config/keys, you can replace these with your own keys if required"
            SUBJECT="/C=IT/ST=TX/L=Lecce/O=tiledesk.com/OU=Teledesk/CN=*"
            openssl req -new -x509 -days 3650 -nodes -out /config/keys/fullchain.pem -keyout /config/keys/privkey.key -subj "$SUBJECT"
        fi
fi
